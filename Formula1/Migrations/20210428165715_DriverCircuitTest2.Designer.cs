// <auto-generated />
using Formula1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Formula1.Migrations
{
    [DbContext(typeof(FormulaContext))]
    [Migration("20210428165715_DriverCircuitTest2")]
    partial class DriverCircuitTest2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Formula1.Models.Circuit", b =>
                {
                    b.Property<string>("CircuitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CircuitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CircuitId");

                    b.ToTable("Circuits");

                    b.HasData(
                        new
                        {
                            CircuitId = "albertPark",
                            CircuitName = "Albert Park",
                            Country = "Australia",
                            Url = "https://f1-circuits.nl/albert-park/"
                        },
                        new
                        {
                            CircuitId = "shanghai",
                            CircuitName = "Shanghai International Circuit",
                            Country = "China",
                            Url = "https://f1-circuits.nl/shanghai/"
                        },
                        new
                        {
                            CircuitId = "bahrain",
                            CircuitName = "Bahrain International Circuit",
                            Country = "Bahrain",
                            Url = "https://f1-circuits.nl/bahrain/"
                        },
                        new
                        {
                            CircuitId = "sochi",
                            CircuitName = "Sochi Autodrom",
                            Country = "Russia",
                            Url = "https://f1-circuits.nl/sochi/"
                        },
                        new
                        {
                            CircuitId = "barcelonaCatalunya",
                            CircuitName = "Circuit de Barcelona-Catalunya",
                            Country = "Spain",
                            Url = "https://f1-circuits.nl/barcelona/"
                        },
                        new
                        {
                            CircuitId = "monaco",
                            CircuitName = "Circuit de Monaco",
                            Country = "Monaco",
                            Url = "https://f1-circuits.nl/monaco/"
                        },
                        new
                        {
                            CircuitId = "gillesVilleneuve",
                            CircuitName = "Circuit Gilles Villeneuve",
                            Country = "Canada",
                            Url = "https://f1-circuits.nl/gilles-villeneuve/"
                        },
                        new
                        {
                            CircuitId = "baku",
                            CircuitName = "Baku City Circuit",
                            Country = "Azerbeidzjan",
                            Url = "https://f1-circuits.nl/baku/"
                        },
                        new
                        {
                            CircuitId = "redBullRing",
                            CircuitName = "Red Bull Ring",
                            Country = "Austria",
                            Url = "https://f1-circuits.nl/red-bull-ring/"
                        },
                        new
                        {
                            CircuitId = "silverstone",
                            CircuitName = "Silverstone",
                            Country = "United Kingdom",
                            Url = "https://f1-circuits.nl/silverstone/"
                        },
                        new
                        {
                            CircuitId = "hungaroring",
                            CircuitName = "Hungaroring",
                            Country = "Hungary",
                            Url = "https://f1-circuits.nl/hungaroring/"
                        },
                        new
                        {
                            CircuitId = "spaFrancorchamps",
                            CircuitName = "Circuit Spa-Francorchamps",
                            Country = "Belgium",
                            Url = "https://f1-circuits.nl/spa-francorchamps/"
                        },
                        new
                        {
                            CircuitId = "monza",
                            CircuitName = "Autodromo Nazionale Monza",
                            Country = "Italy",
                            Url = "https://f1-circuits.nl/monza/"
                        },
                        new
                        {
                            CircuitId = "marinaBay",
                            CircuitName = "Marina Bay Circuit",
                            Country = "Singapore",
                            Url = "https://f1-circuits.nl/marina-bay/"
                        },
                        new
                        {
                            CircuitId = "sepang",
                            CircuitName = "Sepang International Circuit",
                            Country = "Malaysia",
                            Url = "https://f1-circuits.nl/sepang/"
                        },
                        new
                        {
                            CircuitId = "suzuka",
                            CircuitName = "Suzuka",
                            Country = "Japan",
                            Url = "https://f1-circuits.nl/suzuka/"
                        },
                        new
                        {
                            CircuitId = "hermanosRodriguez",
                            CircuitName = "Autódromo Hermanos Rodríguez",
                            Country = "Mexico",
                            Url = "https://f1-circuits.nl/mexico/"
                        },
                        new
                        {
                            CircuitId = "americas",
                            CircuitName = "Circuit of the Americas",
                            Country = "United States",
                            Url = "https://f1-circuits.nl/americas/"
                        },
                        new
                        {
                            CircuitId = "interlagos",
                            CircuitName = "Interlagos",
                            Country = "Brazil",
                            Url = "https://f1-circuits.nl/interlagos/"
                        },
                        new
                        {
                            CircuitId = "yasMarina",
                            CircuitName = "Yas Marina Circuit",
                            Country = "United Arab Emirates",
                            Url = "https://f1-circuits.nl/yas-marina/"
                        },
                        new
                        {
                            CircuitId = "paulRicard",
                            CircuitName = "Paul Ricard",
                            Country = "France",
                            Url = "https://f1-circuits.nl/paul-ricard/"
                        },
                        new
                        {
                            CircuitId = "hockendHeimring",
                            CircuitName = "Hockendheimring",
                            Country = "Germany",
                            Url = "https://f1-circuits.nl/hockenheim/"
                        },
                        new
                        {
                            CircuitId = "zandvoort",
                            CircuitName = "Zandvoort",
                            Country = "The Netherlands",
                            Url = "https://f1-circuits.nl/zandvoort/"
                        },
                        new
                        {
                            CircuitId = "vietnam",
                            CircuitName = "Vietnam",
                            Country = "Vietnam",
                            Url = "https://f1-circuits.nl/vietnam/"
                        },
                        new
                        {
                            CircuitId = "mugello",
                            CircuitName = "Mugello Circuit",
                            Country = "Italy",
                            Url = "https://f1-circuits.nl/mugello/"
                        },
                        new
                        {
                            CircuitId = "nurburging",
                            CircuitName = "Nürburging",
                            Country = "Germany",
                            Url = "https://f1-circuits.nl/nurburgring/"
                        },
                        new
                        {
                            CircuitId = "ferrari",
                            CircuitName = "Autodromo Enzo e Dino Ferrari",
                            Country = "Italy",
                            Url = "https://f1-circuits.nl/imola/"
                        },
                        new
                        {
                            CircuitId = "algarve",
                            CircuitName = "Autodromo Internacional do Algarve",
                            Country = "Portugal",
                            Url = "https://f1-circuits.nl/algarve/"
                        },
                        new
                        {
                            CircuitId = "istanbul",
                            CircuitName = "Istanbul Park",
                            Country = "Turkey",
                            Url = "https://f1-circuits.nl/istanbul-park/"
                        },
                        new
                        {
                            CircuitId = "jeddah",
                            CircuitName = "Jeddah Street Circuit",
                            Country = "Saudi Arabia",
                            Url = "https://f1-circuits.nl/jeddah-street/"
                        });
                });

            modelBuilder.Entity("Formula1.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("DriverId");

                    b.HasIndex("TeamId");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            DriverId = 33,
                            Age = 23,
                            Country = "Netherlands",
                            DriverName = "Max Verstappen",
                            TeamId = 1
                        },
                        new
                        {
                            DriverId = 55,
                            Age = 26,
                            Country = "Spain",
                            DriverName = "Carlos Sainz",
                            TeamId = 2
                        },
                        new
                        {
                            DriverId = 16,
                            Age = 23,
                            Country = "Monaco",
                            DriverName = "Charles Leclerc",
                            TeamId = 2
                        },
                        new
                        {
                            DriverId = 4,
                            Age = 21,
                            Country = "United Kingdom",
                            DriverName = "Lando Norris",
                            TeamId = 4
                        },
                        new
                        {
                            DriverId = 3,
                            Age = 31,
                            Country = "Australia",
                            DriverName = "Daniel Ricciardo",
                            TeamId = 4
                        },
                        new
                        {
                            DriverId = 44,
                            Age = 36,
                            Country = "United Kingdom",
                            DriverName = "Lewis Hamilton",
                            TeamId = 3
                        },
                        new
                        {
                            DriverId = 77,
                            Age = 31,
                            Country = "Finland",
                            DriverName = "Valtteri Bottas",
                            TeamId = 3
                        },
                        new
                        {
                            DriverId = 10,
                            Age = 25,
                            Country = "France",
                            DriverName = "Pierre Gasly",
                            TeamId = 7
                        },
                        new
                        {
                            DriverId = 22,
                            Age = 20,
                            Country = "Japan",
                            DriverName = "Yuki Tsunoda",
                            TeamId = 7
                        },
                        new
                        {
                            DriverId = 18,
                            Age = 25,
                            Country = "France",
                            DriverName = "Lance Stroll",
                            TeamId = 10
                        },
                        new
                        {
                            DriverId = 5,
                            Age = 33,
                            Country = "Germany",
                            DriverName = "Sebastian Vettal",
                            TeamId = 10
                        },
                        new
                        {
                            DriverId = 31,
                            Age = 24,
                            Country = "France",
                            DriverName = "Esteban Ocon",
                            TeamId = 8
                        },
                        new
                        {
                            DriverId = 14,
                            Age = 39,
                            Country = "Spain",
                            DriverName = "Fernando Alonso",
                            TeamId = 1
                        },
                        new
                        {
                            DriverId = 7,
                            Age = 41,
                            Country = "Finland",
                            DriverName = "Kimi Räikkönen",
                            TeamId = 9
                        },
                        new
                        {
                            DriverId = 99,
                            Age = 27,
                            Country = "Italy",
                            DriverName = "Antonio Giovinazzi",
                            TeamId = 9
                        },
                        new
                        {
                            DriverId = 6,
                            Age = 25,
                            Country = "Canada",
                            DriverName = "Nicholas Latifi",
                            TeamId = 6
                        },
                        new
                        {
                            DriverId = 63,
                            Age = 23,
                            Country = "United Kingdom",
                            DriverName = "George Russel",
                            TeamId = 6
                        },
                        new
                        {
                            DriverId = 47,
                            Age = 22,
                            Country = "Germany",
                            DriverName = "Mick Schumacher",
                            TeamId = 5
                        },
                        new
                        {
                            DriverId = 9,
                            Age = 22,
                            Country = "Russia",
                            DriverName = "Nikita Mazepin",
                            TeamId = 5
                        },
                        new
                        {
                            DriverId = 11,
                            Age = 31,
                            Country = "Mexico",
                            DriverName = "Sergio Perez",
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("Formula1.Models.DriverCircuit", b =>
                {
                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("CircuitId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DriverId", "CircuitId");

                    b.HasIndex("CircuitId");

                    b.ToTable("DriverCircuits");

                    b.HasData(
                        new
                        {
                            DriverId = 33,
                            CircuitId = "spaFrancorchamps"
                        },
                        new
                        {
                            DriverId = 33,
                            CircuitId = "marinaBay"
                        },
                        new
                        {
                            DriverId = 55,
                            CircuitId = "marinaBay"
                        },
                        new
                        {
                            DriverId = 55,
                            CircuitId = "silverstone"
                        },
                        new
                        {
                            DriverId = 16,
                            CircuitId = "albertPark"
                        },
                        new
                        {
                            DriverId = 16,
                            CircuitId = "monaco"
                        },
                        new
                        {
                            DriverId = 4,
                            CircuitId = "spaFrancorchamps"
                        },
                        new
                        {
                            DriverId = 4,
                            CircuitId = "monaco"
                        },
                        new
                        {
                            DriverId = 3,
                            CircuitId = "silverstone"
                        },
                        new
                        {
                            DriverId = 3,
                            CircuitId = "monaco"
                        },
                        new
                        {
                            DriverId = 44,
                            CircuitId = "monaco"
                        },
                        new
                        {
                            DriverId = 44,
                            CircuitId = "americas"
                        },
                        new
                        {
                            DriverId = 77,
                            CircuitId = "monza"
                        },
                        new
                        {
                            DriverId = 77,
                            CircuitId = "bahrain"
                        },
                        new
                        {
                            DriverId = 10,
                            CircuitId = "suzuka"
                        },
                        new
                        {
                            DriverId = 10,
                            CircuitId = "bahrain"
                        },
                        new
                        {
                            DriverId = 22,
                            CircuitId = "sepang"
                        },
                        new
                        {
                            DriverId = 22,
                            CircuitId = "interlagos"
                        },
                        new
                        {
                            DriverId = 18,
                            CircuitId = "nurburging"
                        },
                        new
                        {
                            DriverId = 18,
                            CircuitId = "monza"
                        },
                        new
                        {
                            DriverId = 5,
                            CircuitId = "spaFrancorchamps"
                        },
                        new
                        {
                            DriverId = 5,
                            CircuitId = "suzuka"
                        },
                        new
                        {
                            DriverId = 31,
                            CircuitId = "interlagos"
                        },
                        new
                        {
                            DriverId = 31,
                            CircuitId = "marinaBay"
                        },
                        new
                        {
                            DriverId = 14,
                            CircuitId = "suzuka"
                        },
                        new
                        {
                            DriverId = 14,
                            CircuitId = "spaFrancorchamps"
                        },
                        new
                        {
                            DriverId = 7,
                            CircuitId = "vietnam"
                        },
                        new
                        {
                            DriverId = 7,
                            CircuitId = "mugello"
                        },
                        new
                        {
                            DriverId = 99,
                            CircuitId = "algarve"
                        },
                        new
                        {
                            DriverId = 99,
                            CircuitId = "vietnam"
                        },
                        new
                        {
                            DriverId = 6,
                            CircuitId = "spaFrancorchamps"
                        },
                        new
                        {
                            DriverId = 6,
                            CircuitId = "monaco"
                        },
                        new
                        {
                            DriverId = 63,
                            CircuitId = "bahrain"
                        },
                        new
                        {
                            DriverId = 63,
                            CircuitId = "monza"
                        },
                        new
                        {
                            DriverId = 47,
                            CircuitId = "monaco"
                        },
                        new
                        {
                            DriverId = 47,
                            CircuitId = "bahrain"
                        },
                        new
                        {
                            DriverId = 9,
                            CircuitId = "hermanosRodriguez"
                        },
                        new
                        {
                            DriverId = 9,
                            CircuitId = "zandvoort"
                        },
                        new
                        {
                            DriverId = 11,
                            CircuitId = "silverstone"
                        },
                        new
                        {
                            DriverId = 11,
                            CircuitId = "zandvoort"
                        });
                });

            modelBuilder.Entity("Formula1.Models.Ranking", b =>
                {
                    b.Property<int>("Place")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("Place");

                    b.HasIndex("DriverId")
                        .IsUnique();

                    b.ToTable("Ranking");

                    b.HasData(
                        new
                        {
                            Place = 1,
                            DriverId = 44,
                            Points = 44
                        },
                        new
                        {
                            Place = 2,
                            DriverId = 33,
                            Points = 43
                        },
                        new
                        {
                            Place = 3,
                            DriverId = 4,
                            Points = 27
                        },
                        new
                        {
                            Place = 4,
                            DriverId = 16,
                            Points = 20
                        },
                        new
                        {
                            Place = 5,
                            DriverId = 77,
                            Points = 16
                        },
                        new
                        {
                            Place = 6,
                            DriverId = 55,
                            Points = 14
                        },
                        new
                        {
                            Place = 7,
                            DriverId = 3,
                            Points = 14
                        },
                        new
                        {
                            Place = 8,
                            DriverId = 11,
                            Points = 10
                        },
                        new
                        {
                            Place = 9,
                            DriverId = 10,
                            Points = 6
                        },
                        new
                        {
                            Place = 10,
                            DriverId = 18,
                            Points = 5
                        },
                        new
                        {
                            Place = 11,
                            DriverId = 22,
                            Points = 2
                        },
                        new
                        {
                            Place = 12,
                            DriverId = 31,
                            Points = 2
                        },
                        new
                        {
                            Place = 13,
                            DriverId = 14,
                            Points = 1
                        },
                        new
                        {
                            Place = 14,
                            DriverId = 7,
                            Points = 0
                        },
                        new
                        {
                            Place = 15,
                            DriverId = 99,
                            Points = 0
                        },
                        new
                        {
                            Place = 16,
                            DriverId = 63,
                            Points = 0
                        },
                        new
                        {
                            Place = 17,
                            DriverId = 5,
                            Points = 0
                        },
                        new
                        {
                            Place = 18,
                            DriverId = 47,
                            Points = 0
                        },
                        new
                        {
                            Place = 19,
                            DriverId = 9,
                            Points = 0
                        },
                        new
                        {
                            Place = 20,
                            DriverId = 6,
                            Points = 0
                        });
                });

            modelBuilder.Entity("Formula1.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            TeamName = "Redd Bull Racing"
                        },
                        new
                        {
                            TeamId = 2,
                            TeamName = "Ferrari"
                        },
                        new
                        {
                            TeamId = 3,
                            TeamName = "Mercedes"
                        },
                        new
                        {
                            TeamId = 4,
                            TeamName = "McLaren"
                        },
                        new
                        {
                            TeamId = 5,
                            TeamName = "Haas F1 Team"
                        },
                        new
                        {
                            TeamId = 6,
                            TeamName = "Williams"
                        },
                        new
                        {
                            TeamId = 7,
                            TeamName = "AlphaTauri"
                        },
                        new
                        {
                            TeamId = 8,
                            TeamName = "Alpine"
                        },
                        new
                        {
                            TeamId = 9,
                            TeamName = "Alfa Romeo Racing"
                        },
                        new
                        {
                            TeamId = 10,
                            TeamName = "Aston Martin"
                        });
                });

            modelBuilder.Entity("Formula1.Models.Driver", b =>
                {
                    b.HasOne("Formula1.Models.Team", "Team")
                        .WithMany("Drivers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Formula1.Models.DriverCircuit", b =>
                {
                    b.HasOne("Formula1.Models.Circuit", "Circuit")
                        .WithMany("DriversFavorite")
                        .HasForeignKey("CircuitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Formula1.Models.Driver", "Driver")
                        .WithMany("FavoriteCircuits")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Circuit");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Formula1.Models.Ranking", b =>
                {
                    b.HasOne("Formula1.Models.Driver", "Driver")
                        .WithOne("Rank")
                        .HasForeignKey("Formula1.Models.Ranking", "DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Formula1.Models.Circuit", b =>
                {
                    b.Navigation("DriversFavorite");
                });

            modelBuilder.Entity("Formula1.Models.Driver", b =>
                {
                    b.Navigation("FavoriteCircuits");

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("Formula1.Models.Team", b =>
                {
                    b.Navigation("Drivers");
                });
#pragma warning restore 612, 618
        }
    }
}
